name: Production Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'blog/**'
      - 'docs/**'
      - 'static/**'
      - 'Dockerfile'
      - 'Dockerfile.dev'
      - '.github/workflows/deploy-production.yml'
      - 'package.json'
      - 'package-lock.json'
      - 'tsconfig.json'
      - 'tsconfig*.json'
      - '!**/README.md'  # Ignore README.md changes
  release:
    types: [ published ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REG_USERNAME: ${{ github.actor }}
  REG_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_NAME: senfi-sharif/senfi-frontend
  PROD_ENV_FILE: |-
    NODE_ENV=production
    REACT_APP_API_BASE=${{ vars.PROD_API_URL }}
    REACT_APP_SITE_URL=${{ vars.PROD_SITE_URL }}

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env.prod file
        run: |
          echo "${{ env.PROD_ENV_FILE }}" > .env.prod
          echo "Created .env.prod with production environment variables."
        shell: bash
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.REG_USERNAME }}
          password: ${{ env.REG_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=prod-
            type=raw,value=latest
            type=raw,value=production

      - name: Build and push Production Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64 #,linux/arm64

      - name: Deploy notification
        run: |
          echo "ðŸš€ Production deployment completed!"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:production"
          echo "SHA: ${{ github.sha }}"
